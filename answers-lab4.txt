
1. The MPBOOTPHYS macro is needed since we are executing code at a different location than the entrypoint of the processor. Since we are in the kernel, we need to translate our addresses to physical inorder to set our GDT. If we left out this step, we would enter the wrong GDT for this processor (since it would be a virtual address) causing a ton of memory problems.

2. The seperate cpu stacks are still required as the CPU can still access it's stack even when the kernel is locked. If CPU's shared stacks, a unlocked processor could still override the lock and write to the kernel processor's stack (perhpas preparing to jump into the kernel).
